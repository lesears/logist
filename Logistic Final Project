#################################
#                               #
#       MSA Class of 2019       #
#                               #
#      Logistic Regression      #
#        Final Project          #
#        Orange Team 2          #
#                               #
#################################

#install.packages(c('expsmooth','lmtest','zoo','seasonal','haven','fma','gmodels','car','tseries','descr','forecast','brglm2','moments'))
library(car)
library(gmodels)
library(forecast)
library(haven)
library(fma)
library(descr)
library(expsmooth)
library(lmtest)
library(zoo)
library(seasonal)
library(brglm)
library(brglm2)
library(moments)
library(caret)
options(scipen=999) # Improve readability of parameter estimates
set.seed(1452) # Set seed to replicate results

file.dir <- '/Users/matttrombley/Dropbox/Fall 2018/Fall 1/Logistic Regression/Final Project/' # Replace with path to your file
input.file1 <- "construction.sas7bdat"
construction <- read_sas(paste(file.dir, input.file1,sep = "")) # Read in training set
construction$Bid_Win_Difference <- round(construction$Bid_Price__Millions_ - construction$Winning_Bid_Price__Millions_,2) # Creating this variable is one way to resolve all multicollinearity
construction$Won <- ifelse(construction$Win_Bid == "Yes",1,0)
construction$Sector <- as.factor(construction$Sector) # Change Sector to categorical variable
construction <- subset(construction, select = -c(Win_Bid,Competitor_C,Competitor_D,Competitor_G))
summary(construction) # Summarize to check for missing values and descriptive statistics

inTrain <- createDataPartition(y=construction$Won, p=0.70, list=FALSE) # Creating partitions randomly
construction_train <- construction[inTrain,]
construction_valid <- construction[-inTrain,]

control1 <- glm.control1(maxit = 100) # Need to increase the maximum number of model iterations so that brglm can run successfully

construction_ref <- brglm(Won ~ Estimated_Cost__Millions_ + Estimated_Years_to_Complete + Region_of_Country + Number_of_Competitor_Bids + Competitor_A + Competitor_B + Competitor_E + Competitor_F + Competitor_H + Competitor_I + Competitor_J + Bid_Win_Difference + Cost_After_Engineering_Estimate_, data = construction_train, family = binomial(link = "logit"), control.glm = control1) # This new model with Bid_Win_Difference eliminates all multicollinearity present in the model
summary(construction_ref)
vif(construction_ref) # No more multicollinearity present

hist(construction$Bid_Price__Millions_) # Replace variable as needed to generate histograms

# Check for skewness and kurtosis

for (i in c(1,2,3,6,7,8,9,10,11,12,13,14,15,16)) {
   if (skewness(construction[,i]) > 2) {
      print(skewness(construction[,i]))
   }
} # Competitors, C, D, and G all have high values here

for (i in c(1,2,3,6,7,8,9,10,11,12,13,14,15,16)) {
   if (kurtosis(construction[,i]) > 5) {
      print(kurtosis(construction[,i]))
   }
}

##possible outliers...need to recheck in the model
boxplot(construction_train$Estimated_Years_to_Complete)
construction_train$Estimated_Years_to_Complete2[construction_train$Estimated_Years_to_Complete>15]

boxplot(construction_train$Bid_Win_Difference)
construction_train$Bid_Win_Difference[construction_train$Bid_Win_Difference>20]

boxplot(construction_train$Cost_After_Engineering_Estimate_)
boxplot(construction_train$Number_of_Competitor_Bids)

##model building
#install.packages('brglm')
library(brglm)
construction_ref <- brglm(Won ~  Estimated_Cost__Millions_ +Estimated_Years_to_Complete  + 
                            Region_of_Country+ Number_of_Competitor_Bids + Competitor_A + 
                            Competitor_B +  Competitor_E + Competitor_F + Competitor_H + 
                            Competitor_I + Competitor_J + Bid_Win_Difference + 
                            Cost_After_Engineering_Estimate_, data = construction_train,
                          family = binomial(link = "logit"),control1.glm = control1) # This new model with Bid_Win_Difference eliminates all multicollinearity present in the model
summary(construction_ref)

#step wise AIC
construction_fit = update(construction_ref, method = 'brglm.fit')
summary(construction_fit)

construction_select = brglm(Won ~  Estimated_Cost__Millions_   
                               Number_of_Competitor_Bids + Competitor_J + Bid_Win_Difference + 
                              Cost_After_Engineering_Estimate_, data = construction_train,
                            family = binomial(link = "logit"),control1.glm = control1, method = 'brglm.fit') # This new model with Bid_Win_Difference eliminates all multicollinearity present in the model
summary(construction_select)
VIF(construction_select)

#try with smaller categories
construction_ref2 <- brglm(Won ~  Estimated_Cost__Millions_ +Estimated_Years_to_Complete  + 
                            Region_2+ Number_of_Competitor_Bids + Competitor_A + 
                            Competitor_B +  Competitor_E + Competitor_F + Competitor_H + 
                            Competitor_I + Competitor_J + Bid_Win_Difference + 
                            Cost_After_Engineering_Estimate_, data = construction_train,
                          family = binomial(link = "logit"),control1.glm = control1) # This new model with Bid_Win_Difference eliminates all multicollinearity present in the model
summary(construction_ref2)

#step wise AIC
construction_fit2 = update(construction_ref, method = 'brglm.fit')
summary(construction_fit2)
#chooses same variables
