load('C://Users//chels//Desktop//MSA//Fall 1//Linear Algebra//LeukError.RData')

#Getting the number of each type of luekymia
table(leuk[,ncol(leuk)])

#Visibbly displaying the data (don't know if this really works)
library(RColorBrewer)
display.brewer.all()
palette(brewer.pal(n = 8, name = "Dark2"))

#seeing if any two random column are correlated
randomColumns = sample(1:ncol(leuk)-1,2)
plot(leuk[,randomColumns],col = leuk[,ncol(leuk)])

# Visualizing the 2D PCs and getting % of variation is explained
pcaOut = prcomp(leuk[1:ncol(leuk)-1], scale = F)
plot(pcaOut$x[,1],pcaOut$x[,2],col = leuk[,ncol(leuk)], x.lab = "Principal Component 1", y.lab = "Principal Component 2", pch = 20)
with(leuk, text(pcaOut$x[,2]~pcaOut$x[,1], labels = row.names(leuk), pos = 4)) #or can just do biplot below
sum(pcaOut$sdev[1:2]^2)/sum(pcaOut$sdev^2) 
#0.3582157

# Visualizing the 3D PCs and getting % of variation is explained
colors = factor(palette())
colors = colors[leuk[,ncol(leuk)]]
#' make sure the rgl package is installed for the 3d plot.
library(rgl)
plot3d(x = pcaOut$x[,1], y = pcaOut$x[,2],z= pcaOut$x[,3],col = colors, xlab = "Principal Component 1", ylab = "Principal Component 2", zlab = "Principal Component 3")
sum(pcaOut$sdev[1:3]^2)/sum(pcaOut$sdev^2)
#0.4689657

#biplot
biplot(pcaout)

